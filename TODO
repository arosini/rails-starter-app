TO DO:
- Finish TO_TEST
- Obfuscate sign in errors (hackers)
- Move code for form fields into helpers (so parsely validators don't need to be repeated)
- Alphabetize roles list in user profile/index
- Change error message for when password confirmation doesn't match password 
- Localize error messages (forms.js.erb)
- Make custom user_path (my_profile_path if current_user, otherwise user_path(@user)). Remove logic that does this in users controller and views.
- Change vendor assets to CDN
- Remember Me? Checkbox test (sign_in.feature)
- Audit locales for usage (no unused), repition (minimize this) and structure (be consistent!)
- Audit step definitions (use general steps where possible!)
- Create CI script
- KNOWN ISSUES
- Documentation
- Squash to V1.0
- Deploy to heroku
- Work on future features

KNOWN ISSUES:
 - Any 'TO_REMOVE' comments
 - Rubycritic hates things
 - Tests
   - Audit step defs and gherkin for maximum clarity
   - Use more capybara magic (https://gist.github.com/zhengjia/428105) / http://www.elabs.se/blog/51-simple-tricks-to-clean-up-your-capybara-tests

POSSIBLE FUTURE FEATURES:
  - Add name of object/user updated/deleted to confirmation message
  - Date search for users index
  - Add multiple users (See railscast on nested forms).
  - Retain search/advanced-search form values on users index
  - Btn group elipses (when too many are selected to fit in button width)
  - Change routes to not display key/model information -- https://github.com/namick/obfuscate_id
  - Javascript code analyzer (maybe convert to coffescript?)
  - Metrics on routes, sign ups, etc... find some gems and make a dashboard
  - Voice activated UI
  - Translate to another language (spanish, french)
  - Messaging (users can send messages)

DOCUMENTATION TO DO:
  - Design a documentation system (rdoc??)
  - Start up the wiki
  - Document everything!
